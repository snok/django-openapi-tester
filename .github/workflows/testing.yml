name: test

on: push

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Get pip cache dir
        id: pip-cache
        run: |
          pip install -U pip
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output name=dir::$(pip cache dir)"
          echo "::set-output name=dir::$(pip cache dir)"
      - uses: actions/cache@v2
        id: linting-deps
        with:
          path: |
            /home/runner/.cache/*
            ~/.cache/pip
            /opt/hostedtoolcache/Python/3.9.0/x64/lib/*
          key: ${{ runner.os }}-pip3-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip3-
      - run: pip freeze
      - name: Install dependencies
        run: pip install black flake8 isort
        if: steps.linting-deps.outputs.cache-hit != 'true'
      - run: pip freeze
      - name: linting
        run: |
          flake8 .
          black . --check
          isort .
  test:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.6", "3.7", "3.8", "3.9" ]
        django-version: [ "2.2", "3.0", "3.1" ]
    steps:
      - uses: actions/checkout@v2
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: Gr1N/setup-poetry@v4
      - uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: install django ${{ matrix.django-version }}
        run: poetry run pip install "Django~=${{ matrix.django-version }}.0" --upgrade --force-reinstall
      - name: test
        run: |
          poetry run pytest --cov=django_swagger_tester --verbose --color=yes  --assert=plain
          poetry run coverage report
