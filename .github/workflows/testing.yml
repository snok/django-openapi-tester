name: test

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - uses: dschep/install-poetry-action@v1.3
      - uses: actions/cache@v2
        id: cached-deps
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          poetry install
        if: steps.cached-deps.outputs.cache-hit != 'true'
      - uses: actions/upload-artifact@v2
        with:
          name: dependencies
          path: ~/.cache/pip
        if: steps.cached-deps.outputs.cache-hit != 'true'
  linting:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dependencies
          path: ~/.cache/pip
      - name: linting
        run: |
          flake8 .
          black . --check
          isort .
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: [ "3.6", "3.7", "3.8", "3.9" ]
#        django-version: [ "2.0", "2.1", "2.2", "3.0", "3.1" ]
#    steps:
#      - uses: actions/checkout@v2
#      - uses: dschep/install-poetry-action@v1.3
#      - name: set up python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: install django ${{ matrix.django-version }}
#        run: |
#          poetry add "Django~=${{ matrix.django-version }}.0"
#          poetry install
#      - name: test
#        run: |
#          poetry run pytest --cov=django_swagger_tester --verbose --color=yes  --assert=plain
#          poetry run coverage report
