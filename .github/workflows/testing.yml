name: test

on: push

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: python -m pip install black flake8 isort
      - name: linting
        run: |
          flake8 .
          black . --check
          isort .
  test:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.6", "3.7",] #  "3.8", "3.9"
        django-version: [ "3.1" ] #"2.2", "3.0",
    steps:
      - uses: actions/checkout@v2
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: Gr1N/setup-poetry@v4
      - uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: |
          poetry env use python
          poetry install
        # Install new dependencies if our previous venv wasn't cached
        # or (more likely) our dependencies changed, triggering a new build
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: install django ${{ matrix.django-version }}
        run: |
          poetry env use python
          python -m pip install "Django==${{ matrix.django-version }}" --upgrade --force-reinstall
      - name: test
        run: |
          pip freeze
          poetry env use python
          pip freeze
          pytest --cov=django_swagger_tester --verbose --color=yes  --assert=plain
          coverage report
