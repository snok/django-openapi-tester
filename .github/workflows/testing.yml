name: test

on: push

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
#      - uses: actions/cache@v2
#        id: cached-linting-dependencies
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-linting-pip-
      - name: Install dependencies
        run: pip install black flake8 isort
#        if: steps.cached-linting-dependencies.outputs.cache-hit != 'true'
      - name: linting
        run: |
          flake8 .
          black . --check
          isort .
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.6", "3.7", "3.8", "3.9" ]
        django-version: [ "2.2", "3.0", "3.1" ]
    steps:
      - uses: actions/checkout@v2
      - uses: dschep/install-poetry-action@v1.3
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        id: cached-project-dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-project-pip-
      - name: Install dependencies
        run: poetry install
        if: steps.cached-project-dependencies.outputs.cache-hit != 'true'
      - name: install django ${{ matrix.django-version }}
        run: pip install "Django~=${{ matrix.django-version }}.0" --upgrade --force-reinstall
      - name: test
        run: |
          pytest --cov=django_swagger_tester --verbose --color=yes  --assert=plain
          coverage report
